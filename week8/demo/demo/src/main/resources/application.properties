server.port=9091
spring.shardingsphere.datasource.names=ds0,ds1
spring.main.allow-bean-definition-overriding=true

spring.shardingsphere.props.sql.show=true
# ???????


# ??? 1 ????
spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.url=jdbc:mysql://8.131.50.19:3306/xa_order_test1
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root@123

# ??? 2 ????
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://8.131.50.19:3306/xa_order_test2
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root@123

# ?? t_order ???

spring.shardingsphere.sharding.tables.tb_order.actual-data-nodes=ds$->{0..1}.tb_order_t$->{1..16}

# 指定course表里面主键cid 生成策略  SNOWFLAKE
#spring.shardingsphere.sharding.tables.tb_order.key-generator.column=order_no
#spring.shardingsphere.sharding.tables.tb_order.key-generator.type=SNOWFLAKE

# 指定表分片策略  约定cid值偶数添加到course_1表，如果cid是奇数添加到course_2表
spring.shardingsphere.sharding.tables.tb_order.table-strategy.inline.sharding-column=order_no
spring.shardingsphere.sharding.tables.tb_order.table-strategy.inline.algorithm-expression=tb_order_t$->{order_no % 16 +1}

# 指定数据库分片策略 约定user_id是偶数添加m1，是奇数添加m2
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=order_no
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=tb_order_t$->{order_no % 2}

spring.shardingsphere.sharding.tables.tb_order.database-strategy.inline.sharding-column=order_no
spring.shardingsphere.sharding.tables.tb_order.database-strategy.inline.algorithm-expression=ds$->{order_no % 2}